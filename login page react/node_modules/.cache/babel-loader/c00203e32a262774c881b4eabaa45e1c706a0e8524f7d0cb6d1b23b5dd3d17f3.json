{"ast":null,"code":"var _jsxFileName = \"F:\\\\sharp\\\\React task\\\\react task\\\\login page react\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.trim().length > 6\n    };\n  }\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredcollegename, setenteredcollegename] = useState('');\n  const [enteredcollegenameValid, setenteredcollegenameValid] = useState('');\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n\n  // useEffect(()=>{\n  //  const identifier =  setTimeout(()=>{\n  //     console.log('checking for validity')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6 && enteredcollegename.trim().length>6\n  //     );\n  //   },500);\n\n  //   return () =>{\n  //     console.log('CLEAN UP ');\n  //     clearTimeout(identifier)\n  //   }\n\n  // },[enteredEmail,enteredPassword,enteredcollegename])\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && event.target.value.trim().length > 6 && event.target.value.trim().length > 6);\n  };\n  const collegenamechangeHandler = event => {\n    setenteredcollegename(event.target.value);\n    setFormIsValid(event.target.value.includes('@') && event.target.value.trim().length > 6 && event.target.value.trim().length > 6);\n  };\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.trim().length > 6 && event.target.value.trim().length > 6);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'Input_Blur'\n    });\n  };\n  const validateCollegeNameHandler = () => {\n    setenteredcollegenameValid(enteredcollegename.trim().length > 6);\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'Input_Blur'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value, enteredcollegename);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${enteredcollegenameValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"College Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"college\",\n          value: enteredcollegename,\n          onChange: collegenamechangeHandler,\n          onBlur: validateCollegeNameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"eCugPQkE1sd6dRjvWzWXWvWiN08=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","enteredcollegename","setenteredcollegename","enteredcollegenameValid","setenteredcollegenameValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","collegenamechangeHandler","passwordChangeHandler","validateEmailHandler","validateCollegeNameHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["F:/sharp/React task/react task/login page react/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect , useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state,action) => {\n  if(action.type === 'User_Input'){\n    return {value:action.val, isValid:action.val.includes('@')}\n  }\n  if(action.type === 'Input_Blur'){\n    return{value:state.value , isValid:state.value.includes('@')}\n  }\n   return { value : '' , isValid: false}\n}\n\nconst passwordReducer = (state,action) =>{\n  if(action.type === 'User_Input'){\n    return {value: action.val , isValid:action.trim().length > 6}\n  } \n  if(action.type === 'Input_Blur'){\n    return {value:state.value , isValid:state.trim().length > 6}\n  }\n   return {value:'' , isValid: false}\n}\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredcollegename, setenteredcollegename] = useState('');\n  const [enteredcollegenameValid, setenteredcollegenameValid] = useState('');\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer,{value:'' , isValid:null});\n  const [passwordState , dispatchPassword] = useReducer(passwordReducer, {value: '' , isValid: false})\n\n  // useEffect(()=>{\n  //  const identifier =  setTimeout(()=>{\n  //     console.log('checking for validity')\n  //     setFormIsValid(\n  //       enteredEmail.includes('@') && enteredPassword.trim().length > 6 && enteredcollegename.trim().length>6\n  //     );\n  //   },500);\n\n  //   return () =>{\n  //     console.log('CLEAN UP ');\n  //     clearTimeout(identifier)\n  //   }\n\n  // },[enteredEmail,enteredPassword,enteredcollegename])\n  \n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'User_Input', val:event.target.value})\n\n    setFormIsValid(\n      event.target.value.includes('@') && event.target.value.trim().length > 6 && event.target.value.trim().length>6\n          );\n \n  };\n\n  const collegenamechangeHandler = (event) =>{\n    setenteredcollegename(event.target.value)\n    setFormIsValid(\n      event.target.value.includes('@') && event.target.value.trim().length > 6 && event.target.value.trim().length>6\n          );\n  }\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'User_Input' , val: event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && passwordState.trim().length > 6 && event.target.value.trim().length>6\n          );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'Input_Blur'})\n  };\n\n  const validateCollegeNameHandler = () => {\n    setenteredcollegenameValid(enteredcollegename.trim().length > 6);\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:'Input_Blur'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value , enteredcollegename);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n          </div>\n          <div\n          className={`${classes.control} ${\n            enteredcollegenameValid === false ? classes.invalid : ''\n          }`}\n        >\n            <label htmlFor=\"\">College Name</label>\n          <input\n            type=\"text\"\n            id=\"college\"\n            value={enteredcollegename}\n            onChange={collegenamechangeHandler}\n            onBlur={validateCollegeNameHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}