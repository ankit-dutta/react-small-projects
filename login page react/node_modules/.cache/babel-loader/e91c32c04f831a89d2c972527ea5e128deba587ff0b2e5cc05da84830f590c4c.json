{"ast":null,"code":"var _jsxFileName = \"F:\\\\sharp\\\\React task\\\\react task\\\\login page react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport AuthContext from './store/AuthContext';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n    if (storedUserLoggedIn === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler\n      },\n      children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: loginHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n          onLogout: logoutHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","AuthContext","MainHeader","App","isLoggedIn","setIsLoggedIn","storedUserLoggedIn","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","onLogout"],"sources":["F:/sharp/React task/react task/login page react/src/App.js"],"sourcesContent":["import React, { useState ,useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport AuthContext from './store/AuthContext';\nimport MainHeader from './components/MainHeader/MainHeader';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\nuseEffect(()=>{\n  const storedUserLoggedIn = localStorage.getItem('isLoggedIn');\n\n  if(storedUserLoggedIn === '1'){\n    setIsLoggedIn(true);\n  }\n  },[])\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n   \n    localStorage.setItem('isLoggedIn' , '1')\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <React.Fragment>\n      <AuthContext.Provider value = {{\n         isLoggedIn: isLoggedIn,\n         onLogout: logoutHandler\n         }}>\n      <MainHeader  onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n      </AuthContext.Provider> \n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,UAAU,MAAM,oCAAoC;AAAC;AAE5D,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAGrDC,SAAS,CAAC,MAAI;IACZ,MAAMQ,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAE7D,IAAGF,kBAAkB,KAAK,GAAG,EAAC;MAC5BD,aAAa,CAAC,IAAI,CAAC;IACrB;EACA,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMI,YAAY,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;;IAEAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAG,GAAG,CAAC;IACxCP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,aAAa,GAAG,MAAM;IAC1BN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCT,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACE,QAAC,KAAK,CAAC,QAAQ;IAAA,uBACb,QAAC,WAAW,CAAC,QAAQ;MAAC,KAAK,EAAI;QAC5BD,UAAU,EAAEA,UAAU;QACtBW,QAAQ,EAAEF;MACV,CAAE;MAAA,wBACL,QAAC,UAAU;QAAE,QAAQ,EAAEA;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG,eACxC;QAAA,WACG,CAACT,UAAU,iBAAI,QAAC,KAAK;UAAC,OAAO,EAAEK;QAAa;UAAA;UAAA;UAAA;QAAA,QAAG,EAC/CL,UAAU,iBAAI,QAAC,IAAI;UAAC,QAAQ,EAAES;QAAc;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC3C;IAAA;MAAA;MAAA;MAAA;IAAA;EACgB;IAAA;IAAA;IAAA;EAAA,QACR;AAErB;AAAC,GAvCQV,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}