{"ast":null,"code":"var _jsxFileName = \"F:\\\\sharp\\\\React task\\\\react task\\\\login page react\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst collegenameReducer = (state, action) => {\n  if (action.type === 'User_Input') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n  if (action.type === 'Input_Blur') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredcollegename, setenteredcollegename] = useState('');\n  // const [enteredcollegenameValid, setenteredcollegenameValid] = useState('');\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  const [collegenameState, dispatchCollegename] = useReducer(collegenameReducer, {\n    value: '',\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const {\n    isValid: collegenameIsValid\n  } = collegenameState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking for validity');\n      setFormIsValid(emailIsValid && passwordIsValid && collegenameIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEAN UP ');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid, collegenameIsValid]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid && collegenameState.isValid);\n  };\n  const collegenamechangeHandler = event => {\n    // setenteredcollegename(event.target.value)\n    dispatchCollegename({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(event.target.value.includes('@') && passwordState.isValid && collegenameState.isValid);\n  };\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'User_Input',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid && collegenameState.isValid);\n  };\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: 'Input_Blur'\n    });\n  };\n  const validateCollegeNameHandler = () => {\n    // setenteredcollegenameValid(enteredcollegename.trim().length > 6);\n    dispatchCollegename({\n      type: 'Input_Blur'\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'Input_Blur'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value, collegenameState.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"college\",\n        label: \"college\",\n        type: \"text\",\n        isValid: collegenameIsValid,\n        value: collegenameState.value,\n        onChange: collegenamechangeHandler,\n        onBlur: validateCollegeNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"lFyG4c4XmijLVaAgAonN17TKBb8=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","Card","classes","Button","Input","AuthContext","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","collegenameReducer","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","collegenameState","dispatchCollegename","authCtx","emailIsValid","passwordIsValid","collegenameIsValid","identifier","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","collegenamechangeHandler","passwordChangeHandler","validateEmailHandler","validateCollegeNameHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","actions","btn"],"sources":["F:/sharp/React task/react task/login page react/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect , useReducer, useContext} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/AuthContext';\n\nconst emailReducer = (state,action) => {\n  if(action.type === 'User_Input'){\n    return {value:action.val, isValid:action.val.includes('@')}\n  }\n  if(action.type === 'Input_Blur'){\n    return{value:state.value , isValid:state.value.includes('@')}\n  }\n   return { value : '' , isValid: false}\n}\n\nconst passwordReducer = (state,action) =>{\n  if(action.type === 'User_Input'){\n    return {value: action.val , isValid:action.val.trim().length > 6}\n  } \n  if(action.type === 'Input_Blur'){\n    return {value:state.value , isValid:state.value.trim().length > 6}\n  }\n   return {value:'' , isValid: false}\n}\n\nconst collegenameReducer = (state,action) =>{\n  if(action.type === 'User_Input'){\n    return {value: action.val , isValid:action.val.trim().length > 6}\n  } \n  if(action.type === 'Input_Blur'){\n    return {value:state.value , isValid:state.value.trim().length > 6}\n  }\n   return {value:'' , isValid: false}\n}\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredcollegename, setenteredcollegename] = useState('');\n  // const [enteredcollegenameValid, setenteredcollegenameValid] = useState('');\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer,{value:'' , isValid:null});\n  const [passwordState , dispatchPassword] = useReducer(passwordReducer, {value: '' , isValid: null})\n  const [collegenameState , dispatchCollegename] = useReducer(collegenameReducer, {value: '' , isValid: null})\n\n  const authCtx = useContext(AuthContext);\n\nconst {isValid : emailIsValid} = emailState\nconst {isValid: passwordIsValid} = passwordState\nconst {isValid: collegenameIsValid} = collegenameState\n\n  useEffect(()=>{\n   const identifier =  setTimeout(()=>{\n      console.log('checking for validity')\n      setFormIsValid(\n        emailIsValid && passwordIsValid  && collegenameIsValid\n      );\n    },500);\n\n    return () =>{\n      console.log('CLEAN UP ');\n      clearTimeout(identifier)\n    }\n\n  },[emailIsValid, passwordIsValid ,collegenameIsValid])\n  \n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'User_Input', val:event.target.value})\n\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid && collegenameState.isValid\n          );\n \n  };\n\n  const collegenamechangeHandler = (event) =>{\n    // setenteredcollegename(event.target.value)\n    dispatchCollegename({type: 'User_Input' , val: event.target.value})\n    setFormIsValid(\n      event.target.value.includes('@') && passwordState.isValid && collegenameState.isValid\n          );\n  }\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'User_Input' , val: event.target.value})\n\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid && collegenameState.isValid\n          );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({type: 'Input_Blur'})\n  };\n\n  const validateCollegeNameHandler = () => {\n    // setenteredcollegenameValid(enteredcollegename.trim().length > 6);\n    dispatchCollegename({type:'Input_Blur'})\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:'Input_Blur'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    authCtx.onLogin(emailState.value, passwordState.value , collegenameState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input id = \"email\" label = \"E-mail\" type = \"email\" isValid = {emailIsValid} value = {emailState.value} onChange={emailChangeHandler} onBlur ={validateEmailHandler}/>\n        <Input id = \"password\" label = \"password\" type = \"password\" isValid = {passwordIsValid} value = {passwordState.value} onChange={passwordChangeHandler} onBlur ={validatePasswordHandler}/>\n        <Input id = \"college\" label = \"college\" type = \"text\" isValid = {collegenameIsValid} value = {collegenameState.value} onChange={collegenamechangeHandler} onBlur ={validateCollegeNameHandler}/>\n\n       \n          \n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}